name: Create a Docker image and publish to production

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  apps:
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker app
        id: meta_app
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-app

      - name: Extract metadata (tags, labels) for Docker nginx
        id: meta_nginx
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-nginx

      - name: Build and push app Docker image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:app"
          push: true
          tags: ${{ steps.meta_app.outputs.tags }}
          labels: ${{ steps.meta_app.outputs.labels }}

      - name: Build and push nginx Docker image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:nginx"
          push: true
          tags: ${{ steps.meta_nginx.outputs.tags }}
          labels: ${{ steps.meta_nginx.outputs.labels }}

      - name: Start rollout on k8s platform
        uses: actions-hub/kubectl@master
        env:
          KUBE_HOST: ${{ vars.KUBE_HOST }}
          KUBE_CERTIFICATE: ${{ vars.KUBE_CERTIFICATE }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        with:
          args: rollout restart deployment/app --namespace=onderwerpen-prod

      - name: Status rollout on k8s platform
        uses: actions-hub/kubectl@master
        env:
          KUBE_HOST: ${{ vars.KUBE_HOST }}
          KUBE_CERTIFICATE: ${{ vars.KUBE_CERTIFICATE }}
          KUBE_TOKEN: ${{ secrets.KUBE_TOKEN }}
        with:
          args: rollout status deployment/app --namespace=onderwerpen-prod
